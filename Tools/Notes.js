javascript:function makenote(name,value){ var width=350; var height=350; var over=0; var clicked=0; var a=0; var b=0; var c=0; var d=0; var e=0; var f=0; var nameover=0; var xover=0; (function(){var me=document.createElement('div');var body=document.getElementsByTagName('body')[0];body.appendChild(me);me.style.position='fixed';me.style.bottom='0px';me.style.right='0px';me.style.margin='0px';me.style.paddingTop='0px';me.style.width='1366px';me.style.height='20px';me.style.zIndex=10000;me.style.opacity=0.8;me.style.color='white';me.style.backgroundColor='black';me.style.border='0px solid black';me.style.textAlign='center';me.style.cursor='pointer';me.id='me';me.style.display='circle';me.innerText='by dragonmaster73101';document.getElementById('me').addEventListener('click',function(){window.open('https://github.com/dragon731012');});}()); function makex(){ (function () { var x = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(x); x.style.position = 'fixed'; x.style.top = '100px'; x.style.left = '300px'; x.style.margin = '0px'; x.style.width = '20px'; x.style.height = '20px'; x.style.zIndex = 10000; x.style.opacity = 1; x.style.color = 'white'; x.style.fontSize = '12px'; x.style.backgroundColor = 'red'; x.style.border = '0px solid black'; x.style.textAlign = 'center'; x.style.cursor = 'pointer'; x.id = 'x'; x.style.display = 'block'; x.style.paddingBottom = '3px'; x.innerText = 'x'; x.onmouseover = function(event) { xover=1; }; x.onmouseout = function(event) { xover=0; }; }()); } setTimeout(makex,1000); (function () { var elem = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(elem); elem.style.position = 'fixed'; elem.style.top = '100px'; elem.style.left = '300px'; elem.style.margin = '0px'; elem.style.paddingTop = '10px'; elem.style.paddingLeft = '10px'; elem.style.paddingRight = '10px'; elem.style.width = ''+width+'px'; elem.style.height = ''+height+'px'; elem.style.zIndex = 10000; elem.style.opacity = 1; elem.style.color = 'black'; elem.style.backgroundColor = 'white'; elem.style.border = '4px solid black'; elem.style.textAlign = 'left'; elem.style.cursor = 'pointer'; elem.id = 'elem'; elem.style.display = 'block'; elem.innerText = ''+value+''; document.getElementById('elem').contentEditable = true; document.getElementById("elem").style.overflow='auto'; elem.onmouseover = function(event) { over=1; }; elem.onmouseout = function(event) { over=0; }; }()); function makename(){ (function () { var name1 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(name1); name1.style.position = 'fixed'; name1.style.top = '100px'; name1.style.left = '300px'; name1.style.margin = '0px'; name1.style.paddingTop = '5px'; name1.style.paddingLeft = '10px'; name1.style.paddingRight = '10px'; name1.style.width = ''+width+'px'; name1.style.height = '35px'; name1.style.zIndex = 10000; name1.style.opacity = 1; name1.style.color = 'black'; name1.style.backgroundColor = 'white'; name1.style.border = '4px solid black'; name1.style.textAlign = 'center'; name1.style.cursor = 'pointer'; name1.id = 'name1'; name1.style.display = 'block'; name1.innerText = ''+name+''; document.getElementById("elem").style.overflow='auto'; function update(){ c=a; d=b-30; e=a+width-28; f=b-23.5; name1.style.top = ''+d+'px'; name1.style.left = ''+c+'px'; x.style.top = ''+f+'px'; x.style.left = ''+e+'px'; x.style.zIndex = 20000; } setInterval(update,5); name1.onmouseover = function(event) { nameover=1; }; name1.onmouseout = function(event) { nameover=0; }; }()); } setTimeout(makename,1000); function mousemove(event){ if (over==1){ if (clicked==1){ var x=event.clientX; a=x-width/2; var y=event.clientY; b=y-width/2; elem.style.top = ''+b+'px'; elem.style.left = ''+a+'px'; } } } function resize(){ if (nameover==1){ if (clicked==1){ clicked=0; nameover=0; width=prompt("how wide do you want it to be?"); height=prompt("what do you want the height to be?"); elem.style.width = %27%27+width+%27px%27; elem.style.height = %27%27+height+%27px%27; name1.style.width = %27%27+width+%27px%27; a=0; b=0; c=0; d=0; e=0; f=0; over=0; clicked=0; nameover=0; xover=0; x.parentNode.removeChild(x); me.parentNode.removeChild(me); setTimeout(makex,1000); setTimeout(makename,1000); } } if (xover==1){ if (clicked==1){ xover=0; clicked=0; x.parentNode.removeChild(x); name1.parentNode.removeChild(name1); elem.parentNode.removeChild(elem); me.parentNode.removeChild(me); } } } setInterval(resize,5); function click(event) { if (event.button == 0) { clicked=1; } } document.onmousedown = click; function clickup(event) { if (event.button == 0) { clicked=0; } } document.onmouseup = clickup; window.addEventListener(%27mousemove%27,mousemove); function backup(){ if (cookiesorlocal==2){ var text = document.getElementById("elem").textContent; window.localStorage.setItem(""+name+"",""+text+""); } if (cookiesorlocal==1){ var text = document.getElementById("elem").textContent; document.cookie=""+name+"="+text+"; expires=Thu, 18 Dec 9013 12:00:00 UTC"; } if (cookiesorlocal==3){ var text = document.getElementById("elem").textContent; document.cookie=""+name+"="+text+"; expires=Thu, 18 Dec 9013 12:00:00 UTC"; window.localStorage.setItem(""+name+"",""+text+""); } } setInterval(backup,15); } function local(){ var choose=prompt("do you want to make a new note, continue, or delete one? new=1 continue=2 delete=3 delete all=4 only works on same domain. resize deletes the delete button, so just reload"); if (choose==1){ var newcalled=prompt("what do you want your new note to be called? make sure you remember what you call it"); window.localStorage.setItem(""+newcalled+"",""); alert("note added. run again to edit."); } if (choose==2){ var called=prompt("what is your note called? type exactly how you did the first time."); let value=window.localStorage.getItem(called); makenote(called,value); alert("instructions: drag to move. click to edit. click name to resize."); } if (choose==3){ var whatdelete=prompt("what note do you want to delete? type exactly how you did the first time."); localStorage.removeItem(whatdelete); alert("note deleted."); } if (choose==4){ localStorage.clear(); alert("all notes cleared."); } } function cookies(){ function get_cookie(cookie_name) { const value = "; " + document.cookie; const parts = value.split("; " + cookie_name + "="); if (parts.length === 2) return parts.pop().split(";").shift(); } var choose=prompt("do you want to make a new note, continue, or delete one? new=1 continue=2 delete=3 only works on same website. resize deletes the delete button, so just reload"); if (choose==1){ var newnote=prompt("what do you want it to be called? do not forget name. once you create run again to edit. if you name two things the same thing, the one you made before will be deleted."); document.cookie=""+newnote+"=; expires=Thu, 18 Dec 9013 12:00:00 UTC"; window.location.reload(1); } if (choose==2){ var called=prompt("what is your note called? type exactly how you did the first time."); var value = get_cookie(""+called+""); makenote(called,value); alert("instructions: drag to move. click to edit. click name to resize."); } if (choose==3){ var deleted=prompt("what note do you want to be deleted?"); alert("deleted."); document.cookie=""+deleted+"=; expires=Thu, 18 Dec 1913 12:00:00 UTC"; window.location.reload(1); } } function both(){ function get_cookie(cookie_name) { const value = "; " + document.cookie; const parts = value.split("; " + cookie_name + "="); if (parts.length === 2) return parts.pop().split(";").shift(); } var choose=prompt("do you want to make a new note, continue, or delete one? new=1 continue=2 delete=3 only works on same website. resize deletes the delete button, so just reload"); if (choose==1){ var newnote=prompt("what do you want it to be called? do not forget name. once you create run again to edit. if you name two things the same thing, the one you made before will be deleted."); document.cookie=""+newnote+"=; expires=Thu, 18 Dec 9013 12:00:00 UTC"; window.localStorage.setItem(""+newnote+"",""); window.location.reload(1); } if (choose==2){ var called=prompt("what is your note called? type exactly how you did the first time."); var value = get_cookie(""+called+""); var value2=window.localStorage.getItem(called); if (value==value2){ makenote(called,value); alert("instructions: drag to move. click to edit. click name to resize."); } else{ alert("error: cookies is not the same as local storage"); var fix=prompt("do you want to go to cookies backup, local storage backup, or end program? cookies=1 local storage=2 end=3"); if (fix==1){ window.localStorage.setItem(""+called+"",""+value+""); alert("error fixed. you will be redirected back"); both(); } if (fix==2){ document.cookie=""+called+"="+value2+"; expires=Thu, 18 Dec 9013 12:00:00 UTC"; alert("error fixed. you will be redirected back"); both(); } if (fix==3){ alert("program aborted."); } } } if (choose==3){ var deleted=prompt("what note do you want to be deleted?"); alert("deleted."); localStorage.removeItem(deleted); document.cookie=""+deleted+"=; expires=Thu, 18 Dec 1913 12:00:00 UTC"; window.location.reload(1); } } var cookiesorlocal=prompt("do you want to use cookies, local storage, or both? they do not cross save, unless you choose both. ex: saves in cookies. does not work in local storage cookies=1 local=2 both=3"); if (cookiesorlocal==1){ cookies(); } if (cookiesorlocal==2){ local(); } if (cookiesorlocal==3){ both(); }
